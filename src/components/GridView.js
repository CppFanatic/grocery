import React, { useState } from 'react';
import ProductCard from './ProductCard';
import './GridView.css';

function GridView({ gridData, products, onAddToCart, loading, error, selectedStore, useRealApi, onLoadProducts }) {
  const [selectedCategory, setSelectedCategory] = useState(null);
  const [selectedGroup, setSelectedGroup] = useState(null);

  const handleCategorySelect = (category, group) => {
    console.log('üìÇ [GridView] –í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è:', category.title, 'ID:', category.id, '–∏–∑ –≥—Ä—É–ø–ø—ã:', group.title);
    setSelectedCategory(category);
    setSelectedGroup(group);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–π API
    if (useRealApi && onLoadProducts) {
      console.log('üì¶ [GridView] –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:', category.id);
      onLoadProducts(category.id);
    }
  };

  const handleBackToGrid = () => {
    setSelectedCategory(null);
    setSelectedGroup(null);
  };

  const filteredProducts = selectedCategory 
    ? products.filter(product => product.categoryId === selectedCategory.id)
    : products;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω –ª–∏ —Å–∫–ª–∞–¥ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ API
  if (useRealApi && !selectedStore) {
    return (
      <div className="grid-view">
        <div className="store-required-state">
          <div className="store-required-icon">üè™</div>
          <h3>–í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–ª–∞–¥ –¥–ª—è –Ω–∞—á–∞–ª–∞ –ø–æ–∫—É–ø–æ–∫</h3>
          <p>–ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–∫–ª–∞–¥ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏.</p>
          <p>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—ã–±—Ä–∞—Ç—å —Å–∫–ª–∞–¥" –≤—ã—à–µ.</p>
        </div>
      </div>
    );
  }

  if (loading) {
    return (
      <div className="grid-view">
        <div className="loading-state">
          <div className="loading-spinner"></div>
          <p>–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="grid-view">
        <div className="error-state">
          <div className="error-icon">‚ö†Ô∏è</div>
          <p>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: {error}</p>
        </div>
      </div>
    );
  }

  if (!gridData || !gridData.groups || gridData.groups.length === 0) {
    return (
      <div className="grid-view">
        <div className="empty-state">
          <p>–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π</p>
        </div>
      </div>
    );
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  if (selectedCategory) {
    return (
      <div className="grid-view">
        <div className="grid-header">
          <button className="back-button" onClick={handleBackToGrid}>
            ‚Üê –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
          </button>
          <h2>{selectedCategory.title}</h2>
          {selectedGroup && <p className="group-subtitle">{selectedGroup.title}</p>}
        </div>
        <div className="products-grid">
          {loading && filteredProducts.length === 0 ? (
            <div className="loading-state">
              <div className="loading-spinner"></div>
              <p>–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤...</p>
            </div>
          ) : filteredProducts.length === 0 ? (
            <div className="empty-state">
              <p>–ü—Ä–æ–¥—É–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
            </div>
          ) : (
            filteredProducts.map(product => (
              <ProductCard
                key={product.id}
                product={product}
                onAddToCart={onAddToCart}
              />
            ))
          )}
        </div>
      </div>
    );
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ—Ç–∫—É –≥—Ä—É–ø–ø –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  return (
    <div className="grid-view">
      <div className="groups-container">
        {gridData.groups.map(group => (
          <div key={group.id} className="group-section">
            <div className="group-header">
              <h3 className="group-title">{group.title}</h3>
              {group.image_url_template && (
                <img 
                  src={group.image_url_template} 
                  alt={group.title} 
                  className="group-image"
                />
              )}
            </div>
            
            <div className="categories-grid">
              {group.categories && group.categories.map(category => (
                <div
                  key={category.id}
                  className="category-card"
                  onClick={() => handleCategorySelect(category, group)}
                >
                  <div className="category-image">
                    {category.image_url ? (
                      <img src={category.image_url} alt={category.title} />
                    ) : (
                      <div className="category-placeholder">üì¶</div>
                    )}
                  </div>
                  <div className="category-info">
                    <h4 className="category-name">{category.title}</h4>
                  </div>
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}

export default GridView;


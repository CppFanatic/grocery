import { useState, useCallback } from 'react';
import { 
  fetchCategories, 
  fetchProducts, 
  createOrder, 
  fetchOrderStatus, 
  updateOrderStatus,
  fetchStores,
  fetchMains,
  fetchProductsList
} from '../utils/api';

/**
 * –•—É–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API
 * @param {string} baseUrl - –ë–∞–∑–æ–≤—ã–π URL API
 * @param {string} authToken - –¢–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
 * @returns {Object} - –û–±—ä–µ–∫—Ç —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å API –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∑–∞–≥—Ä—É–∑–∫–∏
 */
export const useApi = (baseUrl, authToken) => {
  console.log('üîß [useApi] –•—É–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', {
    baseUrl,
    authToken: authToken ? '***' : '–Ω–µ —É–∫–∞–∑–∞–Ω'
  });
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.warn('üîç [DEBUG] useApi —Ö—É–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è!');

  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);

  const handleApiCall = useCallback(async (apiFunction, ...args) => {
    console.log('üîÑ [useApi] handleApiCall –≤—ã–∑–≤–∞–Ω —Å —Ñ—É–Ω–∫—Ü–∏–µ–π:', apiFunction.name);
    setLoading(true);
    setError(null);
    
    try {
      const result = await apiFunction(baseUrl, authToken, ...args);
      console.log('‚úÖ [useApi] handleApiCall —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω');
      return result;
    } catch (err) {
      console.error('‚ùå [useApi] handleApiCall –æ—à–∏–±–∫–∞:', err);
      setError(err.message);
      throw err;
    } finally {
      setLoading(false);
    }
  }, [baseUrl, authToken]);

  const getCategories = useCallback(() => {
    return handleApiCall(fetchCategories);
  }, [handleApiCall]);

  const getProducts = useCallback((categoryId = null) => {
    return handleApiCall(fetchProducts, categoryId);
  }, [handleApiCall]);

  const submitOrder = useCallback((orderData) => {
    return handleApiCall(createOrder, orderData);
  }, [handleApiCall]);

  const getOrderStatus = useCallback((orderId) => {
    return handleApiCall(fetchOrderStatus, orderId);
  }, [handleApiCall]);

  const updateOrder = useCallback((orderId, status) => {
    return handleApiCall(updateOrderStatus, orderId, status);
  }, [handleApiCall]);

  const getStores = useCallback(() => {
    console.log('üè™ [useApi] –í—ã–∑—ã–≤–∞–µ—Ç—Å—è getStores');
    return handleApiCall(fetchStores);
  }, [handleApiCall]);


  const getMains = useCallback((locale = 'en') => {
    console.log('üè† [useApi] –í—ã–∑—ã–≤–∞–µ—Ç—Å—è getMains —Å –ª–æ–∫–∞–ª—å—é:', locale);
    return handleApiCall(fetchMains, locale);
  }, [handleApiCall]);

  const getProductsList = useCallback((locale = 'en', categoryId, pageToken = '', limit = 10) => {
    console.log('üì¶ [useApi] –í—ã–∑—ã–≤–∞–µ—Ç—Å—è getProductsList —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:', { locale, categoryId, pageToken: pageToken || 'empty (first page)', limit });
    return handleApiCall(fetchProductsList, locale, categoryId, pageToken, limit);
  }, [handleApiCall]);

  return {
    loading,
    error,
    getCategories,
    getProducts,
    submitOrder,
    getOrderStatus,
    updateOrder,
    getStores,
    getMains,
    getProductsList
  };
};
